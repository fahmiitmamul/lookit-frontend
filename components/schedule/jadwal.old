'use client'
import React, { useState } from 'react'
import Select from '@/components/ui/Select'
import Button from '@/components/ui/Button'
import Flatpickr from 'react-flatpickr'
import Textinput from '@/components/ui/Textinput'
import Checkbox from '@/components/ui/Checkbox'
import dayjs from 'dayjs'
import { Controller, useForm } from 'react-hook-form'
import { yupResolver } from '@hookform/resolvers/yup'
import * as Yup from 'yup'
import { useDispatch } from 'react-redux'
import { setLoading } from '@/store/loadingReducer'
import { useMutation, useQueryClient } from '@tanstack/react-query'
import { toast } from 'react-toastify'
import http from '@/app/helpers/http.helper'
import { getCookie } from 'cookies-next'
import { Icon } from '@iconify/react'
import { useEffect } from 'react'

const AddShiftForm = ({ setShowAddShiftModal }) => {
    const [seninStartTime, setSeninStartTime] = useState('00:00')
    const [selasaStartTime, setSelasaStartTime] = useState('00:00')
    const [rabuStartTime, setRabuStartTime] = useState('00:00')
    const [kamisStartTime, setKamisStartTime] = useState('00:00')
    const [jumatStartTime, setJumatStartTime] = useState('00:00')
    const [sabtuStartTime, setSabtuStartTime] = useState('00:00')
    const [mingguStartTime, setMingguStartTime] = useState('00:00')
    const [seninEndTime, setSeninEndTime] = useState('00:00')
    const [selasaEndTime, setSelasaEndTime] = useState('00:00')
    const [rabuEndTime, setRabuEndTime] = useState('00:00')
    const [kamisEndTime, setKamisEndTime] = useState('00:00')
    const [jumatEndTime, setJumatEndTime] = useState('00:00')
    const [sabtuEndTime, setSabtuEndTime] = useState('00:00')
    const [mingguEndTime, setMingguEndTime] = useState('00:00')
    const [masterStartTime, setMasterStartTime] = useState('00:00')
    const [masterEndTime, setMasterEndTime] = useState('00:00')
    const [masterStartChecked, setMasterStartChecked] = useState(false)
    const [masterEndChecked, setMasterEndChecked] = useState(false)
    const [shiftName, setShiftName] = useState('')
    const [shiftOptions, setShiftOptions] = useState([])
    const [shiftCode, setShiftCode] = useState('')
    const [minimalStart, setMinimalStart] = useState('')
    const [minimalEnd, setMinimalEnd] = useState('')
    const [maximalStart, setMaximalStart] = useState('')
    const [maximalEnd, setMaximalEnd] = useState('')

    async function fetchShift() {
        const { data } = await http(token).get('/shift')
        setShiftOptions(
            data.results.data.map((item) => ({
                value: item.shift_name,
                label: item.shift_name,
            }))
        )
        setShiftOptions(
            data.results.data.map((item) => ({
                value: item.shift_name,
                label: item.shift_name,
            }))
        )
        return data.results
    }

    useEffect(() => {
        fetchShift()
    }, [])

    const handleChangeShiftName = (e) => {
        setShiftName(e.target.value)
    }

    const handleSaveShiftName = () => {
        if (shiftName.trim() !== '') {
            const newOption = { value: shiftName, label: shiftName }
            setShiftOptions([...shiftOptions, newOption])
            setShiftName('')
        }
    }

    const handleDeleteShiftName = (index) => {
        const updatedOptions = [...shiftOptions]
        updatedOptions.splice(index, 1)
        setShiftOptions(updatedOptions)
    }

    const FormValidationSchema = Yup.object({
        shift_name: Yup.string().required('Harap diisi'),
        shift_code: Yup.string().required('Harap diisi'),
        minimal_start_time: Yup.string().required('Harap diisi'),
        minimal_end_time: Yup.string().required('Harap diisi'),
        maximal_start_time: Yup.string().required('Harap diisi'),
        maximal_end_time: Yup.string().required('Harap diisi'),
    })

    const {
        control,
        watch,
        register,
        handleSubmit,
        formState: { errors },
    } = useForm({
        resolver: yupResolver(FormValidationSchema),
        mode: 'all',
    })

    const styles = {
        option: (provided, state) => ({
            ...provided,
            fontSize: '14px',
        }),
    }

    const dispatch = useDispatch()
    const queryClient = useQueryClient()
    const token = getCookie('token')

    const postShift = useMutation({
        mutationFn: async (values) => {
            const data = new URLSearchParams({
                ...values,
                shift: JSON.stringify([
                    {
                        day: 'Monday',
                        checked: true,
                        startTime: seninStartTime,
                        endTime: seninEndTime,
                    },
                    {
                        day: 'Tuesday',
                        checked: true,
                        startTime: selasaStartTime,
                        endTime: selasaEndTime,
                    },
                    {
                        day: 'Wednesday',
                        checked: true,
                        startTime: rabuStartTime,
                        endTime: rabuEndTime,
                    },
                    {
                        day: 'Thursday',
                        checked: true,
                        startTime: kamisStartTime,
                        endTime: kamisEndTime,
                    },
                    {
                        day: 'Friday',
                        checked: true,
                        startTime: jumatStartTime,
                        endTime: jumatEndTime,
                    },
                    {
                        day: 'Saturday',
                        checked: true,
                        startTime: sabtuStartTime,
                        endTime: sabtuEndTime,
                    },
                    {
                        day: 'Sunday',
                        checked: true,
                        startTime: mingguStartTime,
                        endTime: mingguEndTime,
                    },
                ]),
            })
            return http(token).post(`/shift`, data)
        },
        onSuccess: () => {
            queryClient.invalidateQueries({ queryKey: ['shift'] })
            dispatch(setLoading(false))
            toast.success('Berhasil menambah shift')
            setShowAddShiftModal(false)
        },
        onError: (err) => {
            toast.error(err?.response?.data?.message)
            dispatch(setLoading(false))
        },
    })

    const onSubmit = (data) => {
        postShift.mutate(data)
        dispatch(setLoading(true))
    }

    const setAllStartTime = () => {
        setSeninStartTime(masterStartTime)
        setSelasaStartTime(masterStartTime)
        setRabuStartTime(masterStartTime)
        setKamisStartTime(masterStartTime)
        setJumatStartTime(masterStartTime)
        setSabtuStartTime(masterStartTime)
        setMingguStartTime(masterStartTime)
    }

    const setAllEndTime = () => {
        setSeninEndTime(masterEndTime)
        setSelasaEndTime(masterEndTime)
        setRabuEndTime(masterEndTime)
        setKamisEndTime(masterEndTime)
        setJumatEndTime(masterEndTime)
        setSabtuEndTime(masterEndTime)
        setMingguEndTime(masterEndTime)
    }

    async function fetchShiftById(value) {
        const { data } = await http(token).get(`/shift/one?shift=${value}`)
        setMasterStartChecked(data.results.shift[0].checked)
        setMasterEndChecked(data.results.shift[1].checked)
        setMasterStartTime(data.results.shift[0].startTime)
        setMasterEndTime(data.results.shift[0].endTime)
        setSeninStartTime(data.results.shift[0].startTime)
        setSelasaStartTime(data.results.shift[1].startTime)
        setRabuStartTime(data.results.shift[2].startTime)
        setKamisStartTime(data.results.shift[3].startTime)
        setJumatStartTime(data.results.shift[4].startTime)
        setSabtuStartTime(data.results.shift[5].startTime)
        setMingguStartTime(data.results.shift[6].startTime)
        setSeninEndTime(data.results.shift[0].endTime)
        setSelasaEndTime(data.results.shift[1].endTime)
        setRabuEndTime(data.results.shift[2].endTime)
        setKamisEndTime(data.results.shift[3].endTime)
        setJumatEndTime(data.results.shift[4].endTime)
        setSabtuEndTime(data.results.shift[5].endTime)
        setMingguEndTime(data.results.shift[6].endTime)
        setShiftCode(data.results.shift_code)
        setMinimalStart(data.results.minimal_start_time)
        setMinimalEnd(data.results.minimal_end_time)
        setMaximalStart(data.results.maximal_start_time)
        setMaximalEnd(data.results.maximal_end_time)
        return data.results
    }

    const shiftData = watch('shift_name')

    useEffect(() => {
        if (shiftData) {
            fetchShiftById(shiftData)
        }
    }, [shiftData])

    return (
        <div>
            <form
                onSubmit={handleSubmit(onSubmit)}
                className="lg:grid-cols-1 grid gap-5 grid-cols-1"
            >
                <div className="lg:grid-cols-3 grid gap-5 grid-cols-1">
                    <div className="flex gap-2">
                        <div className="w-full">
                            <Textinput
                                label="Buat Nama Shift"
                                type="text"
                                placeholder="Nama Shift"
                                value={shiftName}
                                onChange={handleChangeShiftName}
                            />
                        </div>
                        <div className="flex gap-2 mt-8">
                            <div>
                                <Button
                                    text="Batal"
                                    className="bg-red-500 btn-sm text-white"
                                    onClick={handleDeleteShiftName}
                                ></Button>
                            </div>
                            <div>
                                <Button
                                    text="Save"
                                    className="btn-primary btn-sm"
                                    onClick={handleSaveShiftName}
                                ></Button>
                            </div>
                        </div>
                    </div>
                    <div>
                        <label htmlFor="shift_name" className="form-label ">
                            Pilih Shift
                        </label>
                        <Select
                            className="react-select"
                            name="shift_name"
                            register={register}
                            options={[
                                ...(shiftOptions?.map((item) => ({
                                    value: item.value,
                                    label: item.label,
                                })) || []),
                            ]}
                            styles={styles}
                            id="shift_name"
                            error={errors.shift_name}
                        />
                    </div>
                    <div>
                        <Textinput
                            label="Kode Shift"
                            type="text"
                            placeholder="Masukkan Kode Shift"
                            name="shift_code"
                            register={register}
                            error={errors.shift_code}
                            defaultValue={shiftCode}
                        />
                    </div>
                </div>
                <div className="lg:grid-cols-3 grid gap-5 grid-cols-1">
                    <div>
                        <div className="flex gap-2 items-center">
                            <div>
                                <Icon
                                    fontSize={23}
                                    icon="heroicons-outline:cog-6-tooth"
                                />
                            </div>
                            <div className="form-label">Setting</div>
                        </div>
                        <div className="flex flex-col gap-4 mt-4">
                            <div className="flex gap-1">
                                <label
                                    htmlFor="select_all"
                                    className="form-label"
                                >
                                    Tentukan Hari Kerja
                                </label>
                            </div>
                            <div className="flex gap-1"></div>
                            <div className="flex gap-1">
                                <label htmlFor="senin" className="text-md">
                                    Senin
                                </label>
                            </div>
                            <div className="flex gap-1">
                                <label htmlFor="selasa" className="text-md">
                                    Selasa
                                </label>
                            </div>
                            <div className="flex gap-1">
                                <label htmlFor="rabu" className="text-md">
                                    Rabu
                                </label>
                            </div>
                            <div className="flex gap-1">
                                <label htmlFor="kamis" className="text-md">
                                    Kamis
                                </label>
                            </div>
                            <div className="flex gap-1">
                                <label htmlFor="jumat" className="text-md">
                                    Jumat
                                </label>
                            </div>
                            <div className="flex gap-1">
                                <label htmlFor="sabtu" className="text-md">
                                    Sabtu
                                </label>
                            </div>
                            <div className="flex gap-1">
                                <label htmlFor="minggu" className="text-md">
                                    Minggu
                                </label>
                            </div>
                        </div>
                    </div>
                    <div className="flex flex-col gap-10">
                        <div className="flex w-full justify-between gap-10">
                            <div>
                                <label className="form-label ">Jam Masuk</label>
                                <div className="flex flex-col gap-4">
                                    <div className="flex gap-2">
                                        <Flatpickr
                                            className="w-10"
                                            id="masterStartTime"
                                            value={masterStartTime}
                                            onChange={(time) => {
                                                setMasterStartTime(
                                                    dayjs(time).format('HH:mm')
                                                )
                                            }}
                                            options={{
                                                enableTime: true,
                                                noCalendar: true,
                                                dateFormat: 'H:i',
                                                time_24hr: true,
                                            }}
                                        />
                                    </div>
                                    <div className="flex gap-1">
                                        <Checkbox
                                            id="select_all"
                                            onChange={() => {
                                                setMasterStartChecked(true)
                                                setAllStartTime()
                                            }}
                                            value={masterStartChecked}
                                        />
                                        <label
                                            htmlFor="select_all"
                                            className="text-md"
                                        >
                                            Pilih Semua
                                        </label>
                                    </div>
                                    <div className="flex gap-2">
                                        <Flatpickr
                                            className="w-10"
                                            id="seninStartTime"
                                            value={seninStartTime}
                                            onChange={(time) => {
                                                setSeninStartTime(
                                                    dayjs(time).format('HH:mm')
                                                )
                                            }}
                                            options={{
                                                enableTime: true,
                                                noCalendar: true,
                                                dateFormat: 'H:i',
                                                time_24hr: true,
                                            }}
                                        />
                                    </div>
                                    <div className="flex gap-2">
                                        <Flatpickr
                                            className="w-10"
                                            id="selasaStartTime"
                                            onChange={(time) => {
                                                setSelasaStartTime(
                                                    dayjs(time).format('HH:mm')
                                                )
                                            }}
                                            value={selasaStartTime}
                                            options={{
                                                enableTime: true,
                                                noCalendar: true,
                                                dateFormat: 'H:i',
                                                time_24hr: true,
                                            }}
                                        />
                                    </div>
                                    <div className="flex gap-2">
                                        <Flatpickr
                                            className="w-10"
                                            id="rabuStartTime"
                                            onChange={(time) => {
                                                setRabuStartTime(
                                                    dayjs(time).format('HH:mm')
                                                )
                                            }}
                                            value={rabuStartTime}
                                            options={{
                                                enableTime: true,
                                                noCalendar: true,
                                                dateFormat: 'H:i',
                                                time_24hr: true,
                                            }}
                                        />
                                    </div>
                                    <div className="flex gap-2">
                                        <Flatpickr
                                            className="w-10"
                                            id="kamisStartTime"
                                            onChange={(time) => {
                                                setKamisStartTime(
                                                    dayjs(time).format('HH:mm')
                                                )
                                            }}
                                            value={kamisStartTime}
                                            options={{
                                                enableTime: true,
                                                noCalendar: true,
                                                dateFormat: 'H:i',
                                                time_24hr: true,
                                            }}
                                        />
                                    </div>
                                    <div className="flex gap-2">
                                        <Flatpickr
                                            className="w-10"
                                            id="jumatStartTime"
                                            onChange={(time) => {
                                                setJumatStartTime(
                                                    dayjs(time).format('HH:mm')
                                                )
                                            }}
                                            value={jumatStartTime}
                                            options={{
                                                enableTime: true,
                                                noCalendar: true,
                                                dateFormat: 'H:i',
                                                time_24hr: true,
                                            }}
                                        />
                                    </div>
                                    <div className="flex gap-2">
                                        <Flatpickr
                                            className="w-10"
                                            id="sabtuStartTime"
                                            onChange={(time) => {
                                                setSabtuStartTime(
                                                    dayjs(time).format('HH:mm')
                                                )
                                            }}
                                            value={sabtuStartTime}
                                            options={{
                                                enableTime: true,
                                                noCalendar: true,
                                                dateFormat: 'H:i',
                                                time_24hr: true,
                                            }}
                                        />
                                    </div>
                                    <div className="flex gap-2">
                                        <Flatpickr
                                            className="w-10"
                                            id="mingguStartTime"
                                            onChange={(time) => {
                                                setMingguStartTime(
                                                    dayjs(time).format('HH:mm')
                                                )
                                            }}
                                            value={mingguStartTime}
                                            options={{
                                                enableTime: true,
                                                noCalendar: true,
                                                dateFormat: 'H:i',
                                                time_24hr: true,
                                            }}
                                        />
                                    </div>
                                </div>
                            </div>
                            <div>
                                <label className="form-label ">
                                    Jam Pulang
                                </label>
                                <div className="flex flex-col gap-4">
                                    <div className="flex gap-2">
                                        <Flatpickr
                                            className="w-10"
                                            id="masterEndTime"
                                            value={masterEndTime}
                                            onChange={(time) => {
                                                setMasterEndTime(
                                                    dayjs(time).format('HH:mm')
                                                )
                                            }}
                                            options={{
                                                enableTime: true,
                                                noCalendar: true,
                                                dateFormat: 'H:i',
                                                time_24hr: true,
                                            }}
                                        />
                                    </div>
                                    <div className="flex gap-1">
                                        <Checkbox
                                            id="select_all"
                                            onChange={() => {
                                                setMasterEndChecked(true)
                                                setAllEndTime()
                                            }}
                                            value={masterEndChecked}
                                        />
                                        <label
                                            htmlFor="select_all"
                                            className="text-md"
                                        >
                                            Pilih Semua
                                        </label>
                                    </div>
                                    <div className="flex gap-2">
                                        <Flatpickr
                                            className="w-10"
                                            id="seninEndTime"
                                            onChange={(time) => {
                                                setSeninEndTime(
                                                    dayjs(time).format('HH:mm')
                                                )
                                            }}
                                            value={seninEndTime}
                                            options={{
                                                enableTime: true,
                                                noCalendar: true,
                                                dateFormat: 'H:i',
                                                time_24hr: true,
                                            }}
                                        />
                                    </div>
                                    <div className="flex gap-2">
                                        <Flatpickr
                                            className="w-10"
                                            id="selasaEndTime"
                                            onChange={(time) => {
                                                setSelasaEndTime(
                                                    dayjs(time).format('HH:mm')
                                                )
                                            }}
                                            value={selasaEndTime}
                                            options={{
                                                enableTime: true,
                                                noCalendar: true,
                                                dateFormat: 'H:i',
                                                time_24hr: true,
                                            }}
                                        />
                                    </div>
                                    <div className="flex gap-2">
                                        <Flatpickr
                                            className="w-10"
                                            id="rabuEndTime"
                                            onChange={(time) => {
                                                setRabuEndTime(
                                                    dayjs(time).format('HH:mm')
                                                )
                                            }}
                                            value={rabuEndTime}
                                            options={{
                                                enableTime: true,
                                                noCalendar: true,
                                                dateFormat: 'H:i',
                                                time_24hr: true,
                                            }}
                                        />
                                    </div>
                                    <div className="flex gap-2">
                                        <Flatpickr
                                            className="w-10"
                                            id="kamisEndTime"
                                            onChange={(time) => {
                                                setKamisEndTime(
                                                    dayjs(time).format('HH:mm')
                                                )
                                            }}
                                            value={kamisEndTime}
                                            options={{
                                                enableTime: true,
                                                noCalendar: true,
                                                dateFormat: 'H:i',
                                                time_24hr: true,
                                            }}
                                        />
                                    </div>
                                    <div className="flex gap-2">
                                        <Flatpickr
                                            className="w-10"
                                            id="jumatEndTime"
                                            onChange={(time) => {
                                                setJumatEndTime(
                                                    dayjs(time).format('HH:mm')
                                                )
                                            }}
                                            value={jumatEndTime}
                                            options={{
                                                enableTime: true,
                                                noCalendar: true,
                                                dateFormat: 'H:i',
                                                time_24hr: true,
                                            }}
                                        />
                                    </div>
                                    <div className="flex gap-2">
                                        <Flatpickr
                                            className="w-10"
                                            id="sabtuEndTime"
                                            onChange={(time) => {
                                                setSabtuEndTime(
                                                    dayjs(time).format('HH:mm')
                                                )
                                            }}
                                            value={sabtuEndTime}
                                            options={{
                                                enableTime: true,
                                                noCalendar: true,
                                                dateFormat: 'H:i',
                                                time_24hr: true,
                                            }}
                                        />
                                    </div>
                                    <div className="flex gap-2">
                                        <Flatpickr
                                            className="w-10"
                                            id="mingguEndTime"
                                            onChange={(time) => {
                                                setMingguEndTime(
                                                    dayjs(time).format('HH:mm')
                                                )
                                            }}
                                            value={mingguEndTime}
                                            options={{
                                                enableTime: true,
                                                noCalendar: true,
                                                dateFormat: 'H:i',
                                                time_24hr: true,
                                            }}
                                        />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    {console.log(minimalStart)}
                    <div>
                        <div className="flex flex-col">
                            <label
                                htmlFor="profile-photo"
                                className=" form-label"
                            >
                                Atur Keterlambatan :
                            </label>
                            <div className="flex gap-5 mb-5">
                                <div className="flex flex-col">
                                    <label
                                        htmlFor="profile-photo"
                                        className=" form-label"
                                    >
                                        Minimal Jam Masuk
                                    </label>
                                    <Controller
                                        name="minimal_start_time"
                                        control={control}
                                        render={({
                                            field: { onChange, ...fieldProps },
                                        }) => (
                                            <Flatpickr
                                                {...fieldProps}
                                                id="timepicker"
                                                value={minimalStart}
                                                name="minimal_start_time"
                                                className={
                                                    errors?.minimal_start_time
                                                        ?.message
                                                        ? 'border-danger-500 border date-picker-control py-2'
                                                        : 'date-picker-control date-picker-control py-2'
                                                }
                                                onChange={(
                                                    selectedDate,
                                                    dateStr
                                                ) => onChange(dateStr)}
                                                options={{
                                                    enableTime: true,
                                                    noCalendar: true,
                                                    dateFormat: 'H:i',
                                                    time_24hr: true,
                                                }}
                                            />
                                        )}
                                    />
                                    {errors?.minimal_start_time?.message && (
                                        <div
                                            className={
                                                'mt-2 text-danger-500 block text-sm'
                                            }
                                        >
                                            {
                                                errors?.minimal_start_time
                                                    ?.message
                                            }
                                        </div>
                                    )}
                                </div>
                                <div className="flex flex-col">
                                    <label
                                        htmlFor="profile-photo"
                                        className=" form-label"
                                    >
                                        Maksimal Jam Masuk
                                    </label>
                                    <Controller
                                        name="maximal_start_time"
                                        control={control}
                                        render={({
                                            field: { onChange, ...fieldProps },
                                        }) => (
                                            <Flatpickr
                                                {...fieldProps}
                                                id="timepicker"
                                                name="maximal_start_time"
                                                value={maximalStart}
                                                className={
                                                    errors?.maximal_start_time
                                                        ?.message
                                                        ? 'border-danger-500 border date-picker-control py-2'
                                                        : 'date-picker-control date-picker-control py-2'
                                                }
                                                onChange={(
                                                    selectedDate,
                                                    dateStr
                                                ) => onChange(dateStr)}
                                                options={{
                                                    enableTime: true,
                                                    noCalendar: true,
                                                    dateFormat: 'H:i',
                                                    time_24hr: true,
                                                }}
                                            />
                                        )}
                                    />
                                    {errors?.maximal_start_time?.message && (
                                        <div
                                            className={
                                                'mt-2 text-danger-500 block text-sm'
                                            }
                                        >
                                            {
                                                errors?.maximal_start_time
                                                    ?.message
                                            }
                                        </div>
                                    )}
                                </div>
                            </div>
                            <div className="flex gap-5">
                                <div className="flex flex-col">
                                    <label
                                        htmlFor="profile-photo"
                                        className=" form-label"
                                    >
                                        Minimal Jam Pulang
                                    </label>
                                    <Controller
                                        name="minimal_end_time"
                                        control={control}
                                        render={({
                                            field: { onChange, ...fieldProps },
                                        }) => (
                                            <Flatpickr
                                                {...fieldProps}
                                                id="timepicker"
                                                name="minimal_end_time"
                                                value={minimalEnd}
                                                className={
                                                    errors?.minimal_end_time
                                                        ?.message
                                                        ? 'border-danger-500 border date-picker-control py-2'
                                                        : 'date-picker-control date-picker-control py-2'
                                                }
                                                onChange={(
                                                    selectedDate,
                                                    dateStr
                                                ) => onChange(dateStr)}
                                                options={{
                                                    enableTime: true,
                                                    noCalendar: true,
                                                    dateFormat: 'H:i',
                                                    time_24hr: true,
                                                }}
                                            />
                                        )}
                                    />
                                    {errors?.minimal_end_time?.message && (
                                        <div
                                            className={
                                                'mt-2 text-danger-500 block text-sm'
                                            }
                                        >
                                            {errors?.minimal_end_time?.message}
                                        </div>
                                    )}
                                </div>
                                <div className="flex flex-col">
                                    <label
                                        htmlFor="profile-photo"
                                        className=" form-label"
                                    >
                                        Maksimal Jam Pulang
                                    </label>
                                    <Controller
                                        name="maximal_end_time"
                                        control={control}
                                        render={({
                                            field: { onChange, ...fieldProps },
                                        }) => (
                                            <Flatpickr
                                                {...fieldProps}
                                                id="timepicker"
                                                name="maximal_end_time"
                                                value={maximalEnd}
                                                className={
                                                    errors?.maximal_end_time
                                                        ?.message
                                                        ? 'border-danger-500 border date-picker-control py-2'
                                                        : 'date-picker-control date-picker-control py-2'
                                                }
                                                onChange={(
                                                    selectedDate,
                                                    dateStr
                                                ) => onChange(dateStr)}
                                                options={{
                                                    enableTime: true,
                                                    noCalendar: true,
                                                    dateFormat: 'H:i',
                                                    time_24hr: true,
                                                }}
                                            />
                                        )}
                                    />
                                    {errors?.maximal_end_time && (
                                        <div
                                            className={
                                                'mt-2 text-danger-500 block text-sm'
                                            }
                                        >
                                            {errors?.maximal_end_time?.message}
                                        </div>
                                    )}
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div className="flex gap-5 justify-end">
                    <Button
                        text="Batal"
                        className="btn-danger"
                        type="button"
                        onClick={() => {
                            setShowAddShiftModal(false)
                        }}
                    />
                    <Button
                        text="Simpan"
                        type="submit"
                        className="btn-success"
                    />
                </div>
            </form>
        </div>
    )
}

export default AddShiftForm
